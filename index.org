#+TITLE: Изучаем SuperCollider.

* Работа с ProxySpace
** LiveCoding & ProxySpace
** Ndef для прототипирования эффектов

Класс Ndef очень удобно использовать для прототипирования синтезаторов и
эффектов благодаря тому, что у этого класса есть методы для автоматической
генерации GUI.

Для начала определим простой источник сигнала:
#+begin_src sclang
Ndef(\source).play;

Ndef(\source, {
  SinOsc.ar(\freq.kr(220)) * Env.perc().kr(0, Impulse.kr(0.25)) * 0.5;
});
#+end_src

Чтобы сгенерировать GUI воспользуемся метолом ~.gui~
#+begin_src sclang
Ndef(\source).gui;
#+end_src

#+CAPTION: Интерфейс, сгенерированный для Ndef
[[./basic_ndef_gui.png]]

Теперь, если мы добавим дополнительный параметр к нашему синту, он
автоматически отразится в интерфейсе.

#+begin_src sclang
Ndef(\source, {
  SinOsc.ar(\freq.kr(220)) * Env.perc().kr(0, Impulse.kr(\tempo.kr(1))) * 0.5;
});
#+end_src

Слайдер ~tempo~ появился в интерфейсе, только ведёт он себя не так, как нам
нужно.
Дело в том, по-умолчанию SC создает элементы управления только базовых
параметров, таких, как ~freq~ или ~gain~. Для того, чтобы определить диапазон
значений для слайдера, единицы измерения и другие особенности поведения, нужно
воспользоваться классом [[https://doc.sccode.org/Classes/Spec.html][Spec]].

#+begin_src sclang
Spec.add(\tempo, [0.1, 10, \lin, 0.5, 0.1]);

Ndef(\source, {
  SinOsc.ar(\freq.kr(220)) * Env.perc().kr(0, Impulse.kr(\tempo.kr(1))) * 0.5;
});
#+end_src

Теперь слайдер tempo работает в диапазоне от 0.1 до 10 и изменяется линейно.
Чтобы поведение слайдера стало экспоненциальный, символ ~\lin~ нужно заменить
на ~\exp~. Часто такое нужно для параметров, измеряемых в децибелах.

* ddwMixer
 
